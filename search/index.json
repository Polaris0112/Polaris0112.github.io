[{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code       A B C D E F     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien    Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Diff code block 1 2 3 4 5  [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;]   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image \n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"https://polaris0112.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://polaris0112.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }   bilibilibi Shortcode \r\rGist Shortcode  Gitlab Snippets Shortcode  Quote Shortcode Stack adds a quote shortcode. For example:\n Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Anonymous book  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Some book  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― Somebody","date":"2019-03-10T00:00:00Z","permalink":"https://polaris0112.github.io/p/rich-content/","title":"Rich Content"},{"content":"فقرة 1 هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق. إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل فى كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع. ومن هنا وجب على المصمم أن يضع نصوصا مؤقتة على التصميم ليظهر للعميل الشكل كاملاً،دور مولد النص العربى أن يوفر على المصمم عناء البحث عن نص بديل لا علاقة له بالموضوع الذى يتحدث عنه التصميم فيظهر بشكل لا يليق. هذا النص يمكن أن يتم تركيبه على أي تصميم دون مشكلة فلن يبدو وكأنه نص منسوخ، غير منظم، غير منسق، أو حتى غير مفهوم. لأنه مازال نصاً بديلاً ومؤقتاً.\nفقرة 2 هذا النص هو مثال لنص يمكن أن يستبدل في نفس المساحة، لقد تم توليد هذا النص من مولد النص العربى، حيث يمكنك أن تولد مثل هذا النص أو العديد من النصوص الأخرى إضافة إلى زيادة عدد الحروف التى يولدها التطبيق. إذا كنت تحتاج إلى عدد أكبر من الفقرات يتيح لك مولد النص العربى زيادة عدد الفقرات كما تريد، النص لن يبدو مقسما ولا يحوي أخطاء لغوية، مولد النص العربى مفيد لمصممي المواقع على وجه الخصوص، حيث يحتاج العميل فى كثير من الأحيان أن يطلع على صورة حقيقية لتصميم الموقع. ومن هنا وجب على المصمم أن يضع نصوصا مؤقتة على التصميم ليظهر للعميل الشكل كاملاً،دور مولد النص العربى أن يوفر على المصمم عناء البحث عن نص بديل لا علاقة له بالموضوع الذى يتحدث عنه التصميم فيظهر بشكل لا يليق. هذا النص يمكن أن يتم تركيبه على أي تصميم دون مشكلة فلن يبدو وكأنه نص منسوخ، غير منظم، غير منسق، أو حتى غير مفهوم. لأنه مازال نصاً بديلاً ومؤقتاً.\nتجربة RTL كلمة 1 Text كلمة 2\n","date":"2019-03-09T00:00:00Z","image":"https://polaris0112.github.io/p/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://polaris0112.github.io/p/%D9%85%D8%AB%D8%A7%D9%84-%D9%86%D8%B5/","title":"مثال نص"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  1 2 3  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}    To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://polaris0112.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }  ","date":"2019-03-05T00:00:00Z","image":"https://polaris0112.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://polaris0112.github.io/p/emoji-support/","title":"Emoji Support"},{"content":"Github Pages + Hugo + hugo-theme-stack主题搭建全记录 背景 无论是在工作还是闲时，笔者都会折腾一些软件工具、系统等等东西，有时候仅靠备忘录或者是其他备注/文档工具使用的局限性会比较大，近期翻了翻自己的GitHub，发现2018年的自己弄的博客还在，但是属于几年前自己工作刚开始几年随便记录的一些工作上的知识相关的文章，不过保存也还算不错。虽然自己在家里也有Mac Mini来做工作站，用来跑一些网赚脚本和当做私人网盘，不过在可视化和发布上面还是比不上直接在公网上更为直接。\n这里我考虑的有几点需求：\n  成本尽量降到最低\n  发布需要自动化\n  文章整理方便，条理化\n  附加：需要账号体系或者评论系统，导流tg群可以大家一起讨论，互助互利\n  根据以上几点进行方案筛选，以前的框架使用过hexo，其实整体用起来还不错。不过秉着折腾的原则，这次就使用Hugo，网上教程文章数量也不少，但是质量参差不齐，有不少文章按照实际操作起来其实是跑不下来的，所以本文是我部署的全流程+踩坑过程和解决方案。\n概念、前期准备 GitHub Pages GitHub Pages 是一组静态网页集合(Static Web Page)，这些静态网页由 GitHub 托管(host)和发布，所以是 GitHub + Pages。\nHugo Hugo 是用Go语言写的静态网站生成器(Static Site Generator)。可以把Markdown文件转化成HTML文件。\n准备工作  准备好github账号 准备好git的操作环境 前往Hugo Themes找到自己想要的主题并且记录仓库地址（比如我已经选好了hugo-theme-stack） （建议）先了解命令行的操作，比如ls,cd,git,cp等等 （可选）准备好域名，永久免费域名我后续会出教程  部署过程 安装Hugo 官方安装文档，这里仅展示每个平台中其中一种安装方式。\nWindows  设置你的文件夹  你将需要一个存储 Hugo 可执行文件、博客内容（你创建的的那些文件），以及生成文件（Hugo 为你创建的 HTML）的地方。\n 打开 Windows Explorer。 创建一个新的文件夹，D:\\Hugo。 创建一个新的文件夹，D:\\Hugo\\bin。 创建一个新的文件夹，D:\\Hugo\\Sites。   下载预先编译好的 Windows 版本的 Hugo 可执行文件  使用 go 编译 Hugo 的一个优势就是仅有一个二进制文件。你不需要运行安装程序来使用它。相反，你需要把这个二进制文件复制到你的硬盘上。我假设你将把它放在 D:\\Hugo\\bin 文件夹内。如果你选择放在其它的位置，你需要在下面的命令中替换为那些路径。\n 在浏览器中打开 https://github.com/spf13/hugo/releases 当前的版本是 hugo_0.13_windows_amd64.zip。 下载那个 ZIP 文件，并保存到 D:\\Hugo\\bin 文件夹中。 在 Windows Explorer 中找到那个 ZIP 文件，并从中提取所有的文件。 你应该可以看到一个 hugo_0.13_windows_amd64.exe 文件。 把那个文件重命名为 hugo.exe。 确保 hugo.exe 文件在 D:\\Hugo\\bin 文件夹。（有可能提取过程会把它放在一个子文件夹中。如果确实这样的话，使用 Windows Explorer 把它移动到 D:\\Hugo\\bin。） 使用 D:\\Hugo\\bin\u0026gt;set PATH=%PATH%;D:\\Hugo\\bin 把 hugo.exe 可执行文件添加到你的 PATH路径中。  MacOS 1  brew install hugo   Linux 根据自身Linux版本选择对应的安装方式\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  ## 安装包管理snap sudo snap install hugo ## 安装包管理Homebrew brew install hugo ## 存储库包Arch Linux sudo pacman -S hugo ## 存储库包Debian sudo apt install hugo ## 存储库包Fedora sudo dnf install hugo ## 存储库包openSUSE sudo zypper install hugo ## 存储库包Solus sudo eopkg install hugo ## 容器Docker docker pull klakegg/hugo ## 源码安装 ## 1.先安装Git（这里不展开说明） ## 2.再安装Go环境（这里不展开说明） ## 3.最后安装Hugo go install -tags extended github.com/gohugoio/hugo@latest   检查Hugo 以MacOS系统为例\n1 2  hugo version hugo v0.96.0+extended darwin/amd64 BuildDate=unknown   能正常返回结果即安装成功。目前这里我还没有踩过坑，但是安装Hugo成功率是比较大的。\n注意：建议安装带有extended字样的版本，主要是extended支持Sass/SCSS，有些主题可能需要会用到，所以避免重复部署，还是安装有extended字样的。\n设置Github博客源代码仓库/本地启动 注意：这里其实是需要创建两个仓库，一个用来放博客源代码，一个用来放Hugo生成出来的静态文件。他们的关系是：A仓库放源代码（只是存放，不涉及Pages和访问），B仓库放静态文件（用于Pages和外网访问）\n创建博客源代码仓库  仓库命名（随意） 勾选Public，设置为公开仓库![FireShot Capture 010 - Create a ](/Users/all/Downloads/FireShot Capture 010 - Create a .jpg)  部署Hugo源代码到本地  使用hugo命令创建网页文件夹  1  hugo new site yysy   配置上述yysy文件夹的git配置绑定博客源代码仓库  1 2 3  cd yysy git init git remote add https://github.com/Polaris0112/yysy_blog.git   此时，yysy文件夹下目录状态应该是这样的\n![image-20230113161358579](/Users/all/Library/Application Support/typora-user-images/image-20230113161358579.png)\n archetypes：存放用hugo命令新建的md文件应用的front matter模版 config.toml：网站配置文件 content：存放内容页面，如Blog data：存放创建站点时Hugo使用的其他数据 layouts：存放定义网站的样式，写在layouts文件下的样式会覆盖安装的主题中的 layouts文件同名的样式 static：存放所有静态文件，如图片 themes：存放主题文件  部署hugo-theme-stack主题  拉取主题hugo-theme-stack  1  git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack   把主题所需文件拷贝到主目录yysy下  1  cp -r themes/hugo-theme-stack/exampleSite/ ./   注意：这里复制之后，yysy目录下会多一个config.yaml，这个yaml文件才是适配这个主题的文件，后面是用这个来配置，所以config.toml需要删除。若同时保留两个config文件，之后Github Pages会读取config.toml而不是config.yaml。\n测试Hugo Server 可以启动本地服务，来测试我们的配置是否正确\n1 2  ## 在yysy目录下运行 hugo server -D   正常返回是这时候就能打开浏览器访问 http://localhost:1313/\n显示以下页面就是最最最原始的测试页面，元素都能正常展示。（到目前为止还没联动Github Pages，只是本地启动调试）\n![image-20230113162938496](/Users/all/Library/Application Support/typora-user-images/image-20230113162938496.png)\n设置Github Pages仓库 创建Github Pages仓库  命名GitHub Pages仓库，这个仓库名必须是 \u0026lt;username\u0026gt;.github.io 的格式，\u0026lt;username\u0026gt; 是自己的GitHub的用户名。比如我的Github用户名是Polaris0112，那我就要创建polaris0112.github.io作为Pages的仓库名。 勾选Public，设置为公开仓库。![FireShot Capture 010 - Create a (/Users/all/Downloads/FireShot Capture 010 - Create a (1).jpg)](/Users/all/Downloads/FireShot Capture 010 - Create a (1).jpg)  推送静态文件  创建workflows文件。进入上述yysy目录，创建.github/workflows/gh-pages.yml文件（目录不存在的话就创建目录），文件内容如下，复制后保存文件。  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  ## cat .github/workflows/gh-pages.yml# 将 Hubo 博客构建后部署到 Github Pagesname:Deploy github-pages# 在 master 主干分支的任何 push 事件都会触发本 DevOps 工作流水线on:push:branches:[master ]# 以下是本串行执行工作流的所有组成部分jobs:# 这里只定义了一个名为 \u0026#34;deploy\u0026#34; 的多步骤作业build-deploy-hugo-blog:# 将后续的所有工作步骤都运行在最新版的 ubuntu 操作系统上runs-on:ubuntu-latest# 本构建和部署作业的所有步骤定义如下steps:# Step 1 - Checks-out 你的代码库到 $GITHUB_WORKSPACE- name:Checkout blog code repouses:actions/checkout@v2# 这是 Github 官方提供的一个动作模块with:submodules:true# 同步更新所使用的 Hugo 模板fetch-depth:0# 更新到该模板最新的版本# Step 2 - 配置最新版本的 Hugo 环境- name:Setup Hugouses:peaceiris/actions-hugo@v2 # 这是 Github Actions 市场中的一个动作模块with:hugo-version:\u0026#39;latest\u0026#39;# Step 3 - 清理代码库中 public 目录中的内容- name:Clean public directoryrun:rm -rf public # 彻底删除这个目录# Step 4 - 用最新版本的 Hugo 构建个人博客站点- name:Build blog siterun:hugo --minify# Step 5 - 创建用于私有域名所需要的 CNAME 文件- name:Create CNAME filerun:echo \u0026#39;martinliu.cn\u0026#39; \u0026gt; public/CNAME# Step 6 - 将构建好的博客站点推送发布到 gh-pages 分支- name:Deploy blog to Github-pagesuses:peaceiris/actions-gh-pages@v3with:github_token:${{ secrets.DEPLOY_KEY }}publish_dir:./public  保存文件后先更新博客源代码仓库\n1 2 3 4  ## yysy目录下执行 git add . git commit -m \u0026#34;提交更新workflows\u0026#34; git push -u origin main   使用hugo命令生成对应静态文件  1  hugo   ![image-20230113163849511](/Users/all/Library/Application Support/typora-user-images/image-20230113163849511.png)\n![image-20230113163918193](/Users/all/Library/Application Support/typora-user-images/image-20230113163918193.png)\n运行后，yysy目录下会生成public文件夹，里面就是根据其他文件生成出来，整个网站的静态文件。\n进入public目录后，配置git仓库并上传  1 2 3 4 5 6  cd public git init git remote add https://github.com/Polaris0112/Polaris0112.github.io.git git add . git commit -m \u0026#34;提交更新博客静态文件\u0026#34; git push -u origin main   成功推送之后应该是会触发Github Actions，具体在Github Pages仓库（就是仓库名有github.io那个）中Issue那一栏会有Action标签，在那里可以看到每次推送之后触发任务的全部流程细节。\n![image-20230113164418830](/Users/all/Library/Application Support/typora-user-images/image-20230113164418830.png)\n在Pages页面可以看到部署状态，并且可以尝试从github提供的连接（比如我的就是https://polaris0112.github.io/）进行访问，访问结果应该要与本地跑的localhost地址显示的要一样。  ![image-20230113164647942](/Users/all/Library/Application Support/typora-user-images/image-20230113164647942.png)\n结束语 到这里，已经完成了博客的部署，接下来就是调整配置等等相关细节问题，后续会根据笔者使用情况出对应的教程，有兴趣的朋友可以继续阅读以下文章：\n 如有个人域名，将Github Pages设置个人域名并且支持HTTPS 让搜索引擎能搜索该网站 Hugo-theme-stack的配置 Hugo-theme-stack添加搜索栏、Archive栏、Links栏、Abount栏 Hugo-theme-stack使用emoji表情，增加加载进度条，添加评论插件 免费域名（附带续费方式，相当于永久免费）  ","date":"0001-01-01T00:00:00Z","permalink":"https://polaris0112.github.io/p/","title":""}]